1. forEach

- 반복문
- 반환값이 없다.

var arr[1,2,3,4,5];
var test = [];

let value = arr.forEach( (el, index) => {  -> el 에 arr 의 요소가 하나씩 들어감.
	test.push(el+2);
})

console.log(test); -> test 에는 arr+2 의 결과가 저장.
console.log(value); -> 반환값이 없기 때문에 value 에 어떤값도 들어있지 않음.

--------------------------------------------------------------------------------------------------------------

2. map

- 새로운 배열을 생성하여 반환.

var arr[1,2,3,4,5];
var test = [];

let value = arr.forEach( (el, index) => {  -> el 에 arr 의 요소가 하나씩 들어감.
	test.push(el+2);
	return el+2;
})

console.log(test); -> test 에는 arr+2 의 결과가 저장.
console.log(value); -> 새로운 배열을 생성하여 반환하기 때문에 리턴 값에 해당하는 arr+2 결과 저장.

--------------------------------------------------------------------------------------------------------------

3. filter

- 테스트를 통과한 요소로 이루어진 새로운 배열을 반환
- 어떤 요소도 테스트를 통과 못하면 빈배열 반환

const words = ['spray',limit','elite',exuberant',destruction','presenet'];

const result = words.filter( (word,index)
	=> {word.length > 6});

console.log(result); -> 문자열의 길이가 6 이상인 단어 들만 반환.(뒤에 3개)

--------------------------------------------------------------------------------------------------------------

localStrage (브라우저 내에) ( 네이버, 다음)
- 데이터를 사용자 로컬에 보존하는 방식
- 데이터를 저장, 덮어쓰기, 삭제 등 조작 가능.
- JavaScript로 조작
- 모바일에서도 사용 가능
- 유효기간 없이 영구적으로 저장
- 5MB 까지 저장 가능.
- 필요할 떄 언제든 사용 가능
- 도메인과 브라우저 별로 저장.
- key 와 value 하나의 세트로 저장
- value은 반드시 문자열로 저장됨
- JavaScript 의 Object을 저장하지 못함.

데이터 추가하기
localStorage.Test = "Sample";

데이터 취득하기
var value = localStroage.Test;

--------------------------------------------------------------------------------------------------------------

sessionStorage( 탭 마다 메모리 를 가진다) ( 탭 끄면 사라짐 )
- 데이터를 사용자 메모리에 보존
- 해당 도메인 종료시에 삭제
- 메모리 용량에 따라 달라질 수 있음.

추가, 취득 삭제, 등은 로컬과 동일

--------------------------------------------------------------------------------------------------------------

JSON

- 이름과 값의 쌍으로 이루어짐.

JS의Object를 JSON식 String 으로 변환하여 저장할 때 사용

var obj = {
	 name:'teaseOng',
	age:25,
	school:'KIT'
}

var jsonObj = JSON.stringfy(obj);
console.log(jsonObj); ? 다 문자열로 저장.

JSON - parse
- stringify로 변환한 데이터를 다시 불러올수 있다.