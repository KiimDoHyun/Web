-자바스크립트-

var : function scope (함수 안에서 자유롭게 사용 가능한 변수(전역변수))

let, const : block scope ( 중괄호로 구분된 구역 안에서만 가용 가능) -> 추천

block scope
----------------------------------------------------
	{
		block scope 영역
		block scope 영역
	}
----------------------------------------------------
let, var 는 한번 선언하면 재할당은 가능하지만 재선언은 불가능

const 재선언, 재할당 전부 불가능

console.log(내용)

--> 콘솔창에 '내용' 출력 == printf

- 연산자

'==' : 원래는 같은지 확인하는 비교 연산자 이지만 자바 스크립트에서는
	자료형을 따지지 않고 같다고 함.

원래 == 를 사용 하려면 === 을 사용해야 함.


!== : 자료형까지 비교해서 다른지 확인

논리 연산자는 동일함.

- 삼항 연산자

var result = a>b ? 'javascript' : 'hello'
		(참인 경우) : (거짓인 경우)
consol.log(result);


브라우저 -> F12 -> console 창에서 실행 가능한 예제
1.
var name = prompt("what is your name?");

if(name === "kdh")
	document.write(name);

2.
var result = confirm("탈퇴?");

if (result) {
	document.write("완료")
}



document.write("<p style='color:blue'>"" + i + " </p>); 이런식으로도 사용 가능.

document.write('str' + i, '<br/>');
--> 'str' 문자열 + 변수 i + 들여쓰기.



- 함수

함수 안에 함수를 선언하는 중첩 함수 제공

function sum(num1, num2) {
	return num1;
}

-->앞에 funtion 을 붙여줘야 함.( 입력값, 반환값은 필수사항이 아님.)

- 함수 표현식

var myFunc = function sum(num1, num2) {
	return num1 + num2;
}

--> 변수에 함수를 선언하여 할당.
--> 함수가 할당된 변수의 이름으로 호출 가능
--> 따라서 위의 경우 함수 표현식에서 함수 이름인 'sum'이 빠져도 괜찮음.( = 익명함수 )


- Arrow 함수
- 입력 파라미터와 함수의 몸체만을 기숙하여 함수를 정의

(num1, num2) => { return num1 + num2;}
함수 이름, function 생략
' =>' 기호 사용.
내용은 { .. } 안에
함수에 함수로 전달하기 용이.

- 파라미터 초기값
초기값은 undefined를 지님.

finction sum(a, b=10) --> b값이 안오면 10으로 사용함.


- callack 함수 ( 중요 )


- 객체 Object

기능과 속성을 가짐.

ducument.write() 는 document 라는 객체.

함수와 속성으로 이루어짐.(기존에 자바, C++ 에서 사용하던 객체 의 사용법과 동일)

종류
- 내장객체
기본형은 new 라는 키워드와 함께 생성( 안해도 상관없음 )
var 변수 = new Obj();

var tv = new Object();
tv.color = "white";

tv.info = function() {
	--함수 내용--
	this.color;
}

Date,Math 등등 여러 객체 존재.

Math.random() = 0부터 1 까지의 난수 발생

Math.random() * 10 = 0 부터 10 사이 실수로 난수를 반환

0부터 10 까지 정수를 얻으려면?

parseInt(Math.random() * 11);
Math.floor(Math.random() * 11);

Quiz
자신이 원하는 구간 사이의 정수가 발생하게 하려면 어떻게?

*a -> - ~ a-1


2 ~ 6
 *6 : 0 ~ 6

+2 

2 ~8

*5

0 ~ 4

2 ~ 6

정답 : parseInt(Math.random() * (MAX-MIN+1) ) +MIN

Array Object
var d = new Array();
d[0] = 30;
d[1] = true;
...

초기화 방법.(여러방법중 많이 쓰는 방법)
var d = [30, true, {object}];

결합, 삽입, 삭제 개수 반환 등 관련 내장 함수가 존재함.
(String Object 도 있고 관련 내장 함수도 존재.)

- 브라우저 객체 모델 window.location.href ="사이트" -> 해당 사이트로 이동.
prompt, open, alert, confirm 등등.
setInternal 지속적으로 일정한 간격으로 함수를 호출 (clearInterval, cleartimeout 으로 해제 가능)
setItmeout 단 한번 일정한 시간 이 지나면 함수를 호출

- 문서 객체 모델 document 객체로 접근 (DOM)
- HTML문서의 내용을 분석, DOM 을 통한 조작 가능

DOM : 트리 구조 형태
트리의 노드 : HTML 태그 요소
노드는 속성과 속성값을 가짐.

요소 전체가 하나의 객체

<a href="URL">LINK</a>
- 이 자체가 객체가 됨.
href 는 속성, URL 은 href 속성값
LINK 는 <a> 요소(DOM 객체)의 텍스트 노드

DOM 조작을 통한 문서 내용/스타일 변경.
변경
- 내용
- 속성값
- 스타일
- 이벤트 처리

객체 선택 메소드
document.getElementById(아이디) 태그 안의 아이디를 불러옴.
등등 특정 객체를 선택하는 여러 메소드 존재.

document.querySelector(CSS 선택자 #id, .class)등등..

객체 수정 메소드

내용물 수정
obt/outerHTML 객체를 포함하는 태그 요소
obj.innerHTML 객체에 포함되어있는 태그 요소

속성수정
객체 스타일 수정. 등등이 가능

객체 생성/추가/삭제가 가능.

비주얼 코드에서 콘솔창 실행법
node (자바스크립트 파일명).js
